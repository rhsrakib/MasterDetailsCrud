@model MasterDetailsCrud.ViewModel.VmSale
@{
    ViewBag.Title = "Single";
    var listSaleMaster = ViewData["List"] as List<MasterDetailsCrud.Models.SaleMaster>;
    var CreateDate = Model.CreateDate == null ? "" :
        Convert.ToDateTime(Model.CreateDate).ToString("yyyy-MM-dd");
    var ButtonValue = Model.SaleId > 0 ? "Update" : "Add";
    var ButtonClass = Model.SaleId > 0 ? "primary" : "success";
    var indexItem = 0;
    var radio1 = Model.Gender == "Male" ? "selected" : "";
    var radio2 = Model.Gender == "Female" ? "selected" : "";
    var photo = (Model.Photo != null) ? Model.Photo : null;
}

@using (Ajax.BeginForm(
    "Single",
    "Sales",
    new AjaxOptions
    {
        OnSuccess = "OnSuccess",
        OnFailure = "OnFailure",
        LoadingElementId = "progress",
        HttpMethod = "POST"
    },
    new { enctype = "multipart/form-data", @class = "mt-4" }
))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.SaleId)
    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                @Html.LabelFor(m => m.CreateDate)
                <input type="date" id="CreateDate" name="CreateDate" value="@CreateDate" class="form-control" />
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CustomerName)
                @Html.TextBoxFor(m => m.CustomerName, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CustomerAddress)
                @Html.TextBoxFor(m => m.CustomerAddress, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Gender)
                <div>
                    @Html.RadioButtonFor(m => m.Gender, "Male", new { @class = "mr-2" })
                    @Html.LabelFor(m => m.Gender, "Male", new { @class = "mr-3" })
                    @Html.RadioButtonFor(m => m.Gender, "Female", new { @class = "mr-2" })
                    @Html.LabelFor(m => m.Gender, "Female")
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Product Type")
                @Html.DropDownList("SelectedValue", (IEnumerable<SelectListItem>)ViewData["item"], (Model.ProductType.IsEmpty()) ? "Choose an Option" : Model.ProductType, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Photo, htmlAttributes: new { @class = "control-label" })
                <input type="file" name="img" class="form-control-file" />
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <button type="submit" id="btnUpdate" class="btn btn-@ButtonClass btn-block">@ButtonValue</button>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <a href="/Sales/Single" class="btn btn-secondary btn-block">Reset</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-7">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Product Name</th>
                        <th>Unit Price</th>
                        <th>Quantity</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="tSD">
                    @foreach (var item in Model.SaleDetails)
                    {
                        var UnitPrice = item.UnitPrice;
                        indexItem++;
                        <tr id="tr_@indexItem">
                            <td><input type="text" id="ProductName_@indexItem" name="ProductName" value="@item.ProductName" class="form-control" /></td>
                            <td><input type="text" id="UnitPrice_@indexItem" name="UnitPrice" value="@UnitPrice" class="form-control" onkeydown="calculatePrice(@indexItem);" /></td>
                            <td><input type="text" id="Quantity_@indexItem" name="Quantity" value="@item.Quantity" class="form-control" onkeydown="calculatePrice(@indexItem);" /></td>
                            <td><a href="javascript:void(0)" onclick="removeItem(@indexItem);" class="btn btn-danger">Remove</a></td>
                        </tr>
                    }
                </tbody>
            </table>
            <button type="button" onclick="addItem();" class="btn btn-primary">Add Item</button>
        </div>
    </div>
}

@section scripts{
    <script>
        function calculatePrice(id) {
            var unitPrice = parseFloat(document.getElementById('UnitPrice_' + id).value);
            var quantity = parseInt(document.getElementById('Quantity_' + id).value);
            var totalPrice = unitPrice * quantity;
            document.getElementById('TotalPrice_' + id).value = totalPrice.toFixed(2);
        }
    </script>
}
